volumes:
  pgdata:

networks:
  sportify_network:

services:
  postdb:
    image: postgres:16.8-alpine3.20
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - sportify_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}"]
      interval: 5s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NODE_ENV: development #生產環境改成production
    restart: always
    ports:
      - "${PORT}:${PORT}"
    volumes:
      - .:/app
      - /app/node_modules
    env_file:
      - .env
    networks:
      - sportify_network
    depends_on:
      postdb:
        condition: service_healthy
